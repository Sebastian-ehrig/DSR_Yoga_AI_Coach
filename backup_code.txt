# # Pose corrections 

# # Tadhasana

# # ankle, hip, right_shoulder and Head in one line
#     song = AudioSegment.from_wav("./voice_commands/Lengthen_the_spine.wav")

#     if right_leg > 180 or right_leg < 180:  
#         play(song)


# # Warrior 1
#     song = AudioSegment.from_wav("./voice_commands/Bend_the_knee.wav")
#     song_1 = AudioSegment.from_wav("./voice_commands/Lift_the_arms_higher")
    
#     if right_leg  > 90:
#         play(song)


#     if right_arm_and_torso < 120:
#         play(song_1)


# # Warrior 2
#     song_2 = AudioSegment.from_wav("./voice_commands/Lift_the_backarm_up.wav")
#     song = AudioSegment.from_wav("./voice_commands/Bend_the_knee.wav")
    
#     if left_arm_and_torso and right_arm > 180 or left_arm_and_torso and right_arm < 180:
#         play(song)
    
#     if right_leg  > 90:
#         play(song_2)

# # Trikonasana
#     song_3 = AudioSegment.from_wav("./voice_commands/straighten_front_leg.wav")
#     song_4 = AudioSegment.from_wav("./voice_commands/Keep_arms_in_one_line.wav")

#     if right_leg < 180:
#         play(song_3)

#     if left_arm_and_torso and right_arm > 180 or left_arm_and_torso and right_arm < 180:
#         play(song_4)


# Sequence_lead.py

from pydub import AudioSegment
from pydub.playback import play
from numpy import np

# import the time module
import time
  
# define the countdown func.
def countdown(t):
    
    while t:
        mins, secs = divmod(t, 60)
        timer = '{:02d}:{:02d}'.format(mins, secs)
        print(timer, end="\r")
        time.sleep(1)
        t -= 1
      
    print('Fire in the hole!!')


# Voice Commands for sequence lead:
# ---------------------------------

    Inhale_Exhale = "./src/functions/sequence_commands/Inhale_Exhale.ogg"
    Tadhasana_to_Warrior1 = "./src/functions/sequence_commands/Tadhasana_to_Warrior1.ogg"
    Trikonasana_to_Tadhasana = './src/functions/sequence_commands/Trikonasana_to_Tadhasana.ogg'
    Warrior1_to_Warrior2 = "./src/functions/sequence_commands/Warrior1_to_Warrior2.ogg"
    Warrior2_to_Trikonasana = "./src/functions/sequence_commands/Warrior2_to_Trikonasana.ogg"
  
# input time in seconds
t = input("5: ")
  
# function call
countdown(int(t))


# Pose corrections 

# Tadhasana

# ankle, hip, right_shoulder and Head in one line
    song = AudioSegment.from_wav("./voice_commands/Lengthen_the_spine.wav")

    if right_leg > 180 or right_leg < 180:  
        play(song)

# Start of sequence:
    song_a = AudioSegment.from_wav("./voice_commands/Tadhasana.wav")

    if right_leg and right_arm == 180:  
        play(song_a)
    
    # input time in seconds
    t = input("2: ")
  
    # function call
    countdown(int(t))

# Transition 1
    song_b = AudioSegment.from_wav("./voice_commands/Tadhasana_to_warrior1.wav")

    if right_leg and right_arm_and_torso == 90:  
        play(song_b)

# Warrior 1
    song = AudioSegment.from_wav("./voice_commands/Bend_the_knee.wav")
    song_1 = AudioSegment.from_wav("./voice_commands/Lift_the_arms_higher")
    
    if right_leg  > 90:
        play(song)


    if right_arm_and_torso < 120:
        play(song_1)

# Transition 2
    song_b = AudioSegment.from_wav("./voice_commands/Warrior1_Warrior2.wav")

    if right_leg and right_arm == 180:  
        play(song_a)

# Warrior 2
    song_2 = AudioSegment.from_wav("./voice_commands/Lift_the_backarm_up.wav")
    song = AudioSegment.from_wav("./voice_commands/Bend_the_knee.wav")
    
    if left_arm_and_torso and right_arm > 180 or left_arm_and_torso and right_arm < 180:
        play(song)
    
    if right_leg  > 90:
        play(song_2)


# Trikonasana
    song_3 = AudioSegment.from_wav("./voice_commands/straighten_front_leg.wav")
    song_4 = AudioSegment.from_wav("./voice_commands/Keep_arms_in_one_line.wav")

    if right_leg < 180:
        play(song_3)

    if left_arm_and_torso and right_arm > 180 or left_arm_and_torso and right_arm < 180:
        play(song_4)

# Transition 3
    song_c = AudioSegment.from_wav("./voice_commands/Warrior2_Trikonasana.wav")

    if right_leg and right_arm == 180:  
        play(song_c)

